{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/data/app.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<table>\\n  <tr *ngFor=\\\"let f of stockQuote\\\">\\n      <td>{{f.TradeId}}</td>\\n      <td>{{f.TradeDate}}</td>\\n      <td>{{f.BuySell}}</td>\\n      <td>{{f.Notional}}</td>\\n      <td>{{f.Coupon}}</td>\\n      <td>{{f.Currency}}</td>\\n      <td>{{f.ReferenceEntity}}</td>\\n      <td>{{f.Ticker}}</td>\\n      <td>{{f.ShortName}}</td>\\n  </tr>\\n</table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { AppService } from \"./data/app.service\";\nimport { Subscription } from \"rxjs/Subscription\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  stockQuote: number;\n  sub: Subscription;\n  columns: number;\n  rows: number;\n  selectedTicker: string;\n  constructor(private dataService: AppService) {}\n  ngOnInit() {\n    this.sub = this.dataService.getQuotes().subscribe(quote => {\n      this.stockQuote = quote;\n      console.log(this.stockQuote);\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { map, catchError } from 'rxjs/operators';\nimport * as socketIo from 'socket.io-client';\nimport { Socket } from './interfaces';\n\n@Injectable()\nexport class AppService {\n    socket: Socket;\n    observer: Observer<any>;\n    getQuotes(): Observable<any> {\n        this.socket = socketIo('http://localhost:8080');\n        this.socket.on('data', (res) => {\n            this.observer.next(res.data);\n        });\n        return this.createObservable();\n    }\n    createObservable(): Observable<any> {\n        return new Observable<any>(observer => {\n            this.observer = observer;\n        });\n    }\n    private handleError(error) {\n        console.error('server error:', error);\n        if (error.error instanceof Error) {\n            let errMessage = error.error.message;\n            return Observable.throw(errMessage);\n        }\n        return Observable.throw(error || 'Socket.io server error');\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}